[["index.html", "RNASequest: An end-to-end reproducible RNAseq data analysis and publishing framework Chapter 1 Preface", " RNASequest: An end-to-end reproducible RNAseq data analysis and publishing framework Jing Zhu Biogen jing.zhu@biogen.com Yu (Henry) Sun Biogen yuhenry.sun@biogen.com Zhengyu Ouyang BioInfoRx oyoung@bioinforx.com Kejie Li Biogen kejie.li@biogen.com Soumya Negi Biogen soumya.negi@biogen.com Sarbottam Piya Biogen sarbottam.piya@biogen.com Wenxing Hu Biogen wenxing.hu@biogen.com Maria Zavodszky Biogen maria.zavodszky@biogen.com Hima Yalamanchili Biogen hima.yalamanchili@biogen.com Yirui Chen Biogen yirui.chen@biogen.com Xinmin Zhang BioInfoRx xinmin.zhang@biogen.com Fergal Casey (Corresponding Author) Biogen fergal.casey@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com These authors contribute equally Jing Zhu, Yu (Henry) Sun, Zhengyu Ouyang 2023-01-19 Chapter 1 Preface This is a user manual written using Bookdown, which provides a detailed guide for RNASequest. "],["introduction.html", "Chapter 2 Introduction", " Chapter 2 Introduction RNASequest, is a three-in-one RNAseq data analysis, data/app management, and publishing framework. It consists of a reproducible, configurable Expression Analysis (EA) module, multi-faceted result exploration in Quickomics v2.0, Bookdown report and Online slide deck, and a centralized data management system of apps and results generated by the workflow for future queries. Expression Analysis (EA) is a Converter from a set of RNAseq analysis output to QuickOmics (http://quickomics.bxgenomics.com) for interactive visualization. The EA pipeline contains four main scripts: EAinit This is the first step of the pipeline. It creates a directory storing files necessary for future steps. By default, the directory will be named based on the date of running the pipeline. For example, EA20220328_0 will be created since today is 2022-03-28. If the user runs EA again for the same dataset, the last digit will add up to avoid duplications: EA20220328_1 EAqc This is the second step of the pipeline. It analyzes the covariates against the expression to determine if the expression is needed to be adjusted. EArun After running EAqc, the following EArun step will perform differential expression analysis based on defined groups. It also produces QuickOmics objects for webserver loading. EAreport The next step, EAreport, will generate a user-friendly bookdown report to visualize the EA pipeline results. EA2DA The last step, EA2DA, produces 6 data files that are required for the OmicsView project import. "],["installation.html", "Chapter 3 Installation 3.1 Install ExpressionAnalysis 3.2 Install Quickomics", " Chapter 3 Installation 3.1 Install ExpressionAnalysis First we install the ExpressionAnalysis by downloading the scripts from GitHub: git clone https://github.com/interactivereport/RNASequest.git cd RNASequest #Install RNASequest conda environment #Please make sure you have conda installed before, and this step may take a while bash install #Activate the conda environment conda activate ExpressionAnalysis #Also, .env will be created under the src directory: ls ~/RNASequest/src/.env #Check the path of current directory and add it to $PATH: CurrentDir=`pwd` export PATH=&quot;$CurrentDir:$PATH&quot; #However, the above command only adds the RNASequest directory to $PATH temporarily #To add it to the environment permanently, edit ~/.bash_profile or ~/.bashrc: vim ~/.bash_profile #Add the full path of the RNASequest directory to $PATH, for example, $HOME/RNASequest PATH=$PATH:$HOME/RNASequest #Source the file source ~/.bash_profile Set the default paths for ExpressionAnalysis: In sys_example.yml file is used to set the default configurations of the whole pipeline, including paths for Quickomics visualization. Please modify this file before running the pipeline, since the paths will be different from server to server. Please use this sys_example.yml to create a sys.yml file under the src directory, and fill in the necessary information. Here is an example of the sys.yml file: The QuickOmics_test_folder and QuickOmics_publish_folder are defined by the config.csv file in the QuickOmics app folder (See 3.2). ## path to the reference genome is on HPC genome_path: /path/to/genome/references notCovariates: [Sapio_Submission_ID,Sapio_Sample_ID,Sapio_Request_Name,Sapio_Request_ID,Sapio_URL,Sapio_Plate_ID,Sapio_Profile, TST_ID,Status_Time,Well,Organism,ID,Sample_Process,Plate_Name,Volume, #Well_Row, Sample_Type,Sample_Name,Concentration, #Well_Column, Annotated_By,Ethnicity,Race] #sample2meta: [Sapio_Plate_Name,RIN,Organ,Tissue,Cell_type,Cell_Line,Gender,Disease,Treatment,Timepoint,Genotype,Age] qc2meta: [Intragenic Rate,Exonic Rate,Mapping Rate,Genes Detected,Mean Per Base Cov.,Estimated Library Size,Mapped,Intergenic Rate,Total Purity Filtered Reads Sequenced,Intronic Rate,Fragment Length Mean,rRNA rate,No. Covered 5&#39;,Duplication Rate of Mapped] QuickOmics_test_folder: /path/to/QuickOmics_test_folder/ QuickOmics_test_link: http://ngs.biogen.com:3838/Quickomics/?testfile= QuickOmics_publish_folder: /path/to/QuickOmics_data/ QuiclOmics_publish_link: http://ngs.biogen.com:3838/Quickomics/?serverfile= shinyApp: http://ngs.biogen.com/shinyone/app/core/ DA_columns: [SampleID, ProjectName, PlatformName, CellType, Collection, DataSource, Description, DiseaseStage, DiseaseState, Ethnicity, Gender, Infection, Organism, Response, SamplePathology, SampleSource, SampleType, SamplingTime, SubjectID, Symptom, Tissue, Title, Transfection, Treatment, Age] DNAnexus: prjID: FASTR_NGS_PROJECT_ID species: FASTR_REFERENCE_SPECIES ref: FASTR_REFERENCE_VERSION uName: FASTR_USER_FULLNAME count: [genes.estcount_table,genes.expected_count] effL: genes.effective_length tpm: [genes.tpm_table,genes.tpm] indFlag: genes.results.gz seqQC: [combined.metrics,merged_metrics] FileName: projectFile: project.yml prj_counts: counts prj_effLength: length prj_seqQC: seqQC prj_TPM: tpm sample_meta: meta gene_annotation: annotation comparison_file: comparison projectEntry: prjID: project prjTitle: project species: species 3.2 Install Quickomics 3.2.1 Install R packages Method 1. Create conda environment from yml file. This is the easiest way to install all packages. Please download the file https://github.com/interactivereport/Quickomics/blob/master/conda_environment/QuickOmics.yml, load your conda, then run: conda env create -f QuickOmics.yml #The above command may take a while, then you will have a new conda environment called QuickOmics Method 2. Install all packages in your current R environment. Depending on your system, you may need to install other required programs. We recommend using the conda environment method whenever possible. cran_packages=c(&quot;shiny&quot;, &quot;shinythemes&quot;, &quot;shinyjs&quot;, &quot;plotly&quot;, &quot;reshape2&quot;, &quot;tidyverse&quot;, &quot;gplots&quot;, &quot;ggpubr&quot;, &quot;gridExtra&quot;, &quot;ggrepel&quot;, &quot;RcolorBrewer&quot;, &quot;pheatmap&quot;, &quot;rgl&quot;, &quot;car&quot;, &quot;colourpicker&quot;, &quot;VennDiagram&quot;, &quot;factoextra&quot;, &quot;openxlsx&quot;, &quot;visNetwork&quot;, &quot;cowplot&quot;, &quot;circlize&quot;, &quot;svglite&quot;, &quot;shinyjqui&quot;, &quot;Hmisc&quot;, &quot;ggrastr&quot;, &quot;ggExtra&quot;, &quot;networkD3&quot;, &quot;vctrs&quot;, &quot;ragg&quot;, &quot;textshaping&quot;, &quot;stringi&quot;, &quot;plyr&quot;, &quot;png&quot;, &quot;psych&quot;, &quot;broom&quot;) #Note: Hmisc is not required to run the Shiny app but is needed to prepare network data from expression matrix. install.packages(cran_packages, repos=&quot;http://cran.r-project.org/&quot;) #choose repos based on your location if needed if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(c(&quot;Mfuzz&quot;, &quot;biomaRt&quot;, &quot;ComplexHeatmap&quot;, &quot;pathview&quot;)) #Requirements: shiny &gt;= v1.4.0.2 3.2.2 Clone Quickomics GitHub repository git clone https://github.com/interactivereport/Quickomics.git see more at https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/cloning-a-repository 3.2.3 Launch the R Shiny App Check the following web links on various options to launch the app. https://shiny.rstudio.com/articles/running.html https://shiny.rstudio.com/deploy/ 3.2.4 Configure QuickOmics to load projects directly from URLs QuickOmics has a feature to load a project directly from URL in the form of https://quickomics.bxgenomics.com/?serverfile=SRP199678, which requires saving project data files to a user-specified directory on the server hosting QuickOmics. To use this feature, create a file called config.csv in the QuickOmics App folder. category,value server_dir,{Path/to/Server/File} test_dir,{Path/to/Test/Files} Files stored in server_dir can be loaded by URLs like: https://quickomics.bxgenomics.com/?serverfile=project_ID Files stored in test_dir can be loaded by URLs like: https://quickomics.bxgenomics.com/?testfile=project_ID 3.2.5 Prepare project data to be loaded from URL To prepare project files to be loaded via URL, do the following. For each project, besides the two RData files (projectID.RData and ProjectID_netword.RData), prepare a ProjectID.csv file with six columns, e.g. &quot;Name&quot;,&quot;ShortName&quot;,&quot;ProjectID&quot;,&quot;Species&quot;,&quot;ExpressionUnit&quot;,&quot;Path&quot; &quot;RNAseq analysis of sorted microglia&quot;,&quot;SRP199678&quot;,&quot;SRP199678&quot;,&quot;mouse&quot;,&quot;log2(TPM+0.25)&quot;,&quot;/camhpc/home/ysun4/RNASequest/example/SRP199678/EA20220329_0&quot; The last two columns in the csv file are optional but recommended. Now copy the three files (projectID.RData, ProjectID_netword.RData and ProjectID.csv) inside the server_dir folder as specified by the config.csv file, and the project can be loaded as https://quickomics.bxgenomics.com/?serverfile=project_ID (replace quickomics.bxgenomics.com by the URL of your own QuickOmics instance). "],["data-preparation.html", "Chapter 4 Data preparation 4.1 Retrieving data from NCBI GEO 4.2 File hierarchy 4.3 Self-prepared files", " Chapter 4 Data preparation 4.1 Retrieving data from NCBI GEO ExpressionAnalysis requires several input files, which should be organized in specific formats. Here, we present an example of the data processing steps using a public NCBI GEO dataset: SRP199678. The R code recount3.example.R can be run in the terminal under the conda environment created before. conda activate ExpressionAnalysis cd RNASequest/example Rscript recount3.example.R 4.2 File hierarchy After running recount3.example.R, we will have all input files for ExpressionAnalysis with the following hierarchy: SRP199678/ ├── comparison.csv ├── counts.tsv ├── geneAnnotation.csv ├── geneLength.tsv ├── meta.csv └── project.yml 4.3 Self-prepared files For users that have their own dataset to run EA, several files can be prepared from scratch. Here is the detailed instruction on what files are required to run the pipeline. Please use the same file hierarchy as 4.2 after creating them. comparison.csv This file contains comparison groups, which must be defined in the meta.csv. Here is an example of the comparison.csv file: Group_name,Group_test,Group_ctrl group,grp2,grp1 group,grp3,grp2 Group_name: this column specifies the sample meta variable that is of the interest for comparison. Group_test: this column specifies the “case” group of the sample meta variable used for comparison. Group_ctrl: this column specifies control group of the sample meta variable used for comparison. There are more information you can define in this comparison file: CompareName: this is the comparison name column. Every entry in this column must be unique. No limma or DESeq2 tag is needed as they will be added automatically in the result output. Subsetting_group: this is the column to specify the subsetting information if the user wants to do the DEG analysis for a subset of the samples. The entry format is: Covariate1: Covariate1_level; Covariate2: Covariate2_level; Covariate3: Covariate3_level… Different covariates are separated by “;”, the covariate name and covariate value are separated by “:”. e.g. Tissue:brain - in this case Tissue needs to be a column in the sample meta table that has a level “brain”. The DESeq (or limma) counts object will be subset to these samples only. Note: this is an “AND” subsetting operation if using multiple covariates. e.g. Tissue:brain;Sex:male means pull out samples from brain that are also male. This means that it cannot be used to pool together (union) subsets of samples under the same covariate, e.g. Tissue:brain;Tissue:spinal_cord will not return a union of brain and spinal_cord samples. To achieve this operation the user needs to define a new grouping variable in the sample meta file, say Tissue2, that includes a level “brain_spinal_cord” and includes all of those samples. Model: the model formulas are stored in this column.The formula can be combinations of the following formats: Additive: var1 + var2 Nested: var1: var2 Interaction: var1*var2 Covariate_levels: this column is to specify the covariate levels of interest when the variable of interest is interacting with or nested by other covariate(s). In this case, the levels of covariates are required to specify the covariate’s group in which the comparison is made. The entry format is the same as subsetting_group: Covariate1: Covariate1_level; Covariate2: Covariate2_level; Covariate3: Covariate3_level… Different covariates are separated by “;”, the covariate name and covariate value are separated by “:”. e.g. Sex:male;Treatment:placebo. This is an advanced usage parameter, normally you can leave this blank. Analysis_method: this column specifies the tool to be used for the DEG analysis. There are 2 options: DESeq2 and limma. Shrink_logFC: this column specifies if the the user want to apply the logFC shrink during the DEG analysis. The entry can be: yes or no. Please note that this function only applies to the comparison analyzed by DESeq2. The limma package has inbuilt shrinkage function so there is no need to do an extra one. LFC_cutoff: this column is to set the logFoldChange value for the null hypotheses of testing. The default value is 0. Putting this away from 0 makes calls more stringent. counts.tsv This file stores the raw counts of each sample in a tab-delimited format (tsv). $ head -4 counts.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 7 9 11 &quot;ENSMUSG00000095092.1&quot; 2 1 10 &quot;ENSMUSG00000079192.2&quot; 7 7 1 geneAnnotation.csv This file contains the detailed annotation of each gene shown in the count.tsv table. Here is an example: $ head -4 geneAnnotation.csv &quot;&quot;,&quot;seqnames&quot;,&quot;start&quot;,&quot;end&quot;,&quot;width&quot;,&quot;strand&quot;,&quot;source&quot;,&quot;type&quot;,&quot;bp_length&quot;,&quot;phase&quot;,&quot;UniqueID&quot;,&quot;gene_type&quot;,&quot;Gene.Name&quot;,&quot;level&quot;,&quot;mgi_id&quot;,&quot;havana_gene&quot;,&quot;tag&quot;,&quot;id&quot; &quot;ENSMUSG00000079800.2&quot;,&quot;GL456210.1&quot;,9124,58882,49759,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,1271,NA,&quot;ENSMUSG00000079800.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.3&quot;,&quot;3&quot;,NA,NA,NA,1 &quot;ENSMUSG00000095092.1&quot;,&quot;GL456210.1&quot;,108390,110303,1914,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,366,NA,&quot;ENSMUSG00000095092.1&quot;,&quot;protein_coding&quot;,&quot;AC125149.5&quot;,&quot;3&quot;,NA,NA,NA,2 &quot;ENSMUSG00000079192.2&quot;,&quot;GL456210.1&quot;,123792,124928,1137,&quot;+&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,255,NA,&quot;ENSMUSG00000079192.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.1&quot;,&quot;3&quot;,NA,NA,NA,3 geneLength.tsv This file has the gene length information. It must match the dimension of the count.tsv file. $ head -4 geneLength.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 1271 1271 1271 &quot;ENSMUSG00000095092.1&quot; 366 366 366 &quot;ENSMUSG00000079192.2&quot; 255 255 255 meta.csv This meta.csv file can contain many annotation columns for the dataset. For example, this is a meta file containing group information: $ head -4 meta.tsv &quot;&quot;,&quot;group&quot; &quot;SRR9139048&quot;,&quot;grp1&quot; &quot;SRR9139049&quot;,&quot;grp2&quot; &quot;SRR9139050&quot;,&quot;grp3&quot; project.yml The project.yml file contains a high-level summary of the project, including project name, species, etc. $ cat project.yml project: SRP199678 species: mouse file_source: sra project_home: data_sources_sra project_type: data_sources number_samples: 155 "],["expression-analysis-ea-component.html", "Chapter 5 Expression analysis (EA) component 5.1 EAinit 5.2 EAqc 5.3 EArun 5.4 EAreport 5.5 EA2DA 5.6 Administration", " Chapter 5 Expression analysis (EA) component First, make sure the .env has been created under the src folder: ls ~/RNASequest/src/.env 5.1 EAinit EAinit Path/to/a/DNAnexus/result/folder #Example: EAinit ~/RNASequest/example/SRP199678 Execution of the above command will create a sub-folder (EA[timestamp]) in the specified RNAseq result folder. There will be five files in the result folder: compareInfo.csv: an empty comparison definition file (with header). Please fill in this file before the EArun call. config.yml: a config file specifies the parameters of the EAqc and EArun. Please update covariates_adjust after EAqc. geneAnnotation.csv: a gene annotation file including gene symbol. sampleMeta.csv: a sample meta-information file, please feel free to add additional columns whose column names should be considered to be added into covariates_check in config.yml. alignQC.pdf: plots generated from alignment QC metrics. Please pay attention to the std out messages. 5.2 EAqc EAqc Path/to/a/config/file #Example: EAqc ~/RNASequest/example/SRP199678/EA20220328_0/config.yml Through executing the command with the above default config file, expression PC analysis will be done against covariates specified in covariates_check in the config.yml file. An Excel file will list p-values for all numeric and categorical covariates, and significant ones will be in plot pdf files. The analysis before covariate adjusting will have the prefix covariatePCanalysis_noAdjust. Based on the above results, you can add covariates into covariates_adjust in the config.yml file, and rerun EAqc. This time additional expression PC analysis will be applied to covariate-adjusted expression with files started with covariatePCanalysis_Adjusted. Please pay attention to the std out messages. 5.3 EArun EArun Path/to/a/config/file #Example: EArun ~/RNASequest/example/SRP199678/EA20220328_0/config.yml Please fill in the compareInfo.csv before executing the above command Execution of the above command will produce R objects for QuickOmics webserver to load. The process will generate the covariate-adjusted logTPM for visualization; complete differentially expressed gene analysis and gene network generation. The results (four files) can be uploaded to the QuickOmics webserver. Please pay attention to the std out messages. 5.4 EAreport EAreport Path/to/a/config/file #Example: EAreport ~/RNASequest/example/SRP199678/EA20220328_0/config.yml By running the command above, the pipeline will generate a BookdownReport folder in the same directory as the config file. This folder contains the raw Rmd files, as well as the final bookdown report, which is the BookdownReport/docs/index.html file. If you would like to send the full report to your collaborators, please download the tarball created under the EA working directory, named as ProjectName_BookdownReport.tar.gz (ProjectName was extracted from the config.yml file). The index.html inside it is the bookdown report. 5.5 EA2DA EA2DA A/path/to/a/config/file #Example: EA2DA ~/RNASequest/example/SRP199678/EA20220328_0/config.yml The execution of the above command will produce 6 data files which are required for the OmicsView project import. Please fill in the empty entries in the Project_Info.csv before import. 5.6 Administration There are two config files in the pipeline folder: config.tmp.yml: The template of the config file, with all default values; sys.yml: the system config file, which includes: genome_path: the root path where the genome definition files (gtf) are located notCovariates: the column names from the sample meta information should not be considered as default covariates qc2meta: the column names from mapping QC file should be extracted and inserted into sample meta table QuickOmics_path: the file path to store the files for QuickOmics web server display DA_columns: the column names available for the sample meta table in the OmicsView system "],["output.html", "Chapter 6 Output 6.1 QuickOmics visualization 6.2 Other output files", " Chapter 6 Output 6.1 QuickOmics visualization The output results can be piped to QuickOmics (http://quickomics.bxgenomics.com) for visualization. Here are the four necessary files required by QuickOmics: SRP199678_estCount.rds SRP199678_network.RData SRP199678.RData SRP199678.csv This example has been uploaded to the QuickOmics site: https://quickomics.bxgenomics.com/?serverfile=SRP199678 6.2 Other output files Also, the EA pipeline generates a couple of files under the working directory. The pdf files and index.html can be directly visualized by the user. However, we suggest the user download the ready-to-transfer ProjectName_BookdownReport.tar.gz tarball and open the index.html file inside for visualization. Here is an example of the output directory hierarchy: SRP199678/ ├── comparison.csv ├── counts.tsv ├── EA20220328_0 #This directory was generated by the EA pipeline ├── BookdownReport/ ├── ... ├── docs/ ├── index.html #Original bookdown report └── .... ├── config.yml ├── data/ ├── notAdjusted_Covariate_PC_Results.rds ├── notAdjusted_Covariate_PC_Results.xlsx ├── notAdjusted_PCA_Plots.pdf ├── notAdjusted_Significant_Categorical_Covariates.pdf ├── notAdjusted_Significant_Numeric_Covariates.pdf ├── sequenceQC.pdf ├── sequenceQC.unionTop.TPM.csv ├── session.EAinit #Four R sessionInfo() outputs ├── session.EAqc ├── session.EAreport ├── session.EArun ├── SRP199678_BookdownReport.tar.gz #Bookdown report tarball ├── SRP199678.csv #QuickOmics file 1 ├── SRP199678_estCount.rds #QuickOmics file 2 ├── SRP199678_network.RData #QuickOmics file 3 ├── SRP199678.RData #QuickOmics file 4 ├── geneAnnotation.csv ├── geneLength.tsv ├── meta.csv └── project.yml "],["advanced-plotting-functions.html", "Chapter 7 Advanced plotting functions 7.1 PCA plot 7.2 Covariate checking 7.3 Volcano plot 7.4 Heatmap", " Chapter 7 Advanced plotting functions For advanced users, EA offers versatile plotting functions to adjust your figures. Each plotting function within Plot_Functions.R has many options, mirroring the user interface from QuickOmics. Here are several examples: 7.1 PCA plot # Load RData created from EArun # Here is an example # https://github.com/interactivereport/Quickomics/blob/master/data/Mouse_microglia_RNA-Seq.RData load(&quot;data/Mouse_microglia_RNA-Seq.RData&quot;) # Load Plot_Functions.R # https://github.com/interactivereport/RNASequest/tree/main/src setwd(&quot;~/RNASequest/src/&quot;) source(&quot;Plot_Functions.R&quot;) # Create a basic PCA Plot. p&lt;-PCA_Plot(data_wide, MetaData) print(p) # PCA plot with additional options: p&lt;-PCA_Plot(data_wide, MetaData, pcnum=c(2, 3),label_samples=F, PCAcolorby=&quot;Age&quot;, PCAshapeby=&quot;Genotype&quot;, ellipsoid=T, rug = T) # Plot only selected samples: input_samples=MetaData$sampleid[20:60] p&lt;-PCA_Plot(data_wide, MetaData, input_samples) print(p) 7.2 Covariate checking # Check covariates: # This can be displayed as a table in R Markdown res&lt;-PC_covariates_out(data_wide, MetaData) sig_covariates=res$selVar_All #data frame to print as table # Check covariates with more options if needed: res&lt;-PC_covariates_out(data_wide, MetaData, input_samples, select_covariates=c(&quot;Age&quot;, &quot;Genotype&quot;, &quot;Gender&quot;), PC_cutoff=3, FDR_cutoff=0.2) (sig_covariates=res$selVar_All) 7.3 Volcano plot # Loop through the comparisons. p&lt;-Volcano_Plot(results_long, ProteinGeneName, comparison=&quot;2yr_KOvs2yr_WT&quot;) print(p) # More controls on volcano plot: p&lt;-Volcano_Plot(results_long, ProteinGeneName, comparison=&quot;1yr_KOvs1yr_WT&quot;, Ngenes=40, rasterize=&quot;No&quot;, vlegendpos=&quot;right&quot;, Max_Pvalue=30, Max_logFC=1.5) 7.4 Heatmap # Heatmap # Overview from 1000 most variable genes p&lt;-Heatmap_Plot(data_wide, MetaData, results_long, ProteinGeneName,heatmap_subset=&quot;variable&quot;, maxgenes=1000) draw(p, merge_legend=T, auto_adjust = FALSE) # Heatmap from DEGs of a comparison: # This can be done for all comparisons. p&lt;-Heatmap_Plot(data_wide, MetaData, results_long, ProteinGeneName,heatmap_subset=&quot;subset&quot;, comparison=&quot;2yr_WTvs2mo_WT&quot;) draw(p, merge_legend=T, auto_adjust = FALSE) # With more options to customize the heatmap p&lt;-Heatmap_Plot(data_wide, MetaData, results_long, ProteinGeneName,heatmap_subset=&quot;subset&quot;, comparison=&quot;2yr_WTvs2mo_WT&quot;, heatmap_fccut=4, heatmap_pvalcut=0.01, heatmap_psel = &quot;Padj&quot;, heatmap_row_dend=FALSE, heatmap_annot=c(&quot;Age&quot;, &quot;Genotype&quot;) ) draw(p, merge_legend=T, auto_adjust = FALSE) "],["quickomics-component.html", "Chapter 8 Quickomics component", " Chapter 8 Quickomics component Quickomics v2.0 is a user-friendly platform for visualizing the results interactively. Please find the following resources: GitHub: https://github.com/interactivereport/Quickomics Tutorial: https://interactivereport.github.io/Quickomics/tutorial/docs/ "],["bookdown-component.html", "Chapter 9 Bookdown component", " Chapter 9 Bookdown component To enable better visualization and immediate delivery of the results, we employed a Bookdown output to present the key tables and figures after running the EA pipeline. Bookdown is a book-like long-form report originated from R Markdown with dynamic graphics and user-friendly layouts. The bookdown document generated by our pipeline, an interactive webpage in HTML format, allows users to explore the results on a web browser without installing any specific software. It contains a high-level summary of the project, such as the data quality, significant covariates, as well as basic plots including PCA, heatmaps, and volcano plots. Further, it can be hosted in GitHub as exemplified here, for broad sharing especially in publication. Here is a screenshot of a bookdown report generated after running the EA pipeline. It contains 5 sections showing multiple exploratory analysis figures: QC figures, Covariates, PCA, Volcano plots, and Heatmaps. "],["slide-deck-component.html", "Chapter 10 Slide deck component", " Chapter 10 Slide deck component Powered by reveal.js, the online slide deck is an R markdown template utilized by RNASequest to generate an interactive slide deck with emphasis on the graphical representation of QC and basic analysis plots, which makes the primary analysis presentation-ready for engaging biologists to discuss the initial results immediately. Again, it is also GitHub-friendly in terms of hosting. Please visit an example of the online slide deck using the following link: https://interactivereport.github.io/RNASequest/ShinyOne/SRP199678/SlideDeck/index.html Here is the tutorial to create your own slide deck after running the EA pipeline: 1, Find the path of the bookdown.info.txt file, it is located in: ***/YourPorjectName/EA******/BookdownReport/bookdown.info.txt 2, Go to the RNASequest/src dir, and modify line #29 of script ‘Slidedeck.Rmd’: info_txt &lt;- &lt;your bookdown.info.txt path&gt; 3, Finally render the slide deck: The slide deck Slidedeck.Rmd script is under the /src directory of the RNASequest installation. Rscript -e &#39;rmarkdown::render(&quot;~/RNASequest/src/Slidedeck.Rmd&quot;, output_file=&quot;yourslidedeck_name.html&quot;)&#39; Then it will generate yourslidedeck_name.html for visualization. Please note: 1, Please run EAreport first before generating the slide deck. For more details, please check the manual. 2, The Slidedeck.Rmd only plots the first two covariates for ‘covariates plot’, so as to avoid plotting hundreds of figures/slides. If users want to plot a specific covariate, please edit the ‘config.yml’ file by moving your desired covariates to the first two. For example: # The original: covariates_check: [cvt1, cvt2, …, cv_desire1, cv_desire2, …] # Change it to: covariates_check: [cv_desire1, cv_desire2, cvt1, cvt2, …] "],["shinyone-component.html", "Chapter 11 ShinyOne component", " Chapter 11 ShinyOne component We also developed ShinyOne, which is an R Shiny App displaying a web-based searchable table that lists all projects processed by RNASequest and loaded into Quickomics, with Quickomics launching link for each project. In the backend of Quickomics, we added the capability to load projects directly from URLs after the data files have been saved at user-specified server locations. Together, ShinyOne and URL loading enable many projects to be powered by one Quickomics instance. Please use the following link to access ShinyOne: http://shinyone.bxgenomics.com To add a new project to ShineOne, one can simply add one line to the project.csv file in the ShinyOne App folder. For example, after processing project SRP199678 using the EA pipeline, we have the following: QuickOmics Visualization Link: https://quickomics.bxgenomics.com/?serverfile=SRP199678 SlideDeck: https://interactivereport.github.io/RNASequest/ShinyOne/SRP199678/SlideDeck Bookdown report: https://interactivereport.github.io/RNASequest/ShinyOne/SRP199678/Bookdown Here is an example of adding this information to the project.csv file: Project ID Description Species Contact Person Release Date URL Bookdown Slidedeck SRP199678 SRP199678 (RNASequest Demo) SRP199678 data from Recount3 Mouse Henry Sun 3/30/2022 https://quickomics.bxgenomics.com/?serverfile=SRP199678 https://interactivereport.github.io/RNASequest/ShinyOne/SRP199678/Bookdown https://interactivereport.github.io/RNASequest/ShinyOne/SRP199678/SlideDeck And it will show up in the ShinyOne Page: https://shinyone.bxgenomics.com/ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
