[["index.html", "RNASequest: An end-to-end reproducible RNAseq data analysis and publishing framework Chapter 1 Preface", " RNASequest: An end-to-end reproducible RNAseq data analysis and publishing framework Jing Zhu Biogen jing.zhu@biogen.com Fergal Casey Biogen fergal.casey@biogen.com Zhengyu Ouyang BioInfoRx oyoung@bioinforx.com Yu (Henry) Sun Biogen yuhenry.sun@biogen.com Kejie Li Biogen kejie.li@biogen.com Soumya Negi Biogen soumya.negi@biogen.com Sarbottam Piya Biogen sarbottam.piya@biogen.com Wenxing Hu Biogen wenxing.hu@biogen.com Maria Zavodszky Biogen maria.zavodszky@biogen.com Hima Yalamanchili Biogen hima.yalamanchili@biogen.com Xinmin Zhang BioInfoRx xinmin.zhang@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com These authors contribute equally Jing Zhu, Fergal Casey, Zhengyu Ouyang 2022-04-05 Chapter 1 Preface This is a user manual written using Bookdown, which provides a detailed guide for RNASequest. "],["introduction.html", "Chapter 2 Introduction", " Chapter 2 Introduction RNASequest, is a three-in-one RNAseq data analysis, data/app management, and publishing framework. It consists of a reproducible, configurable Expression Analysis (EA) module, multi-faceted result exploration in Quickomics v2.0, Bookdown report and Online slide deck, and a centralized data management system of apps and results generated by the workflow for future query. Expression Analysis (EA) is a Converter from a set of RNAseq analysis output to QuickOmics (http://quickomics.bxgenomics.com) for interactive visualization. The EA pipeline contains four main scripts: EAinit This is the first step of the pipeline. First, it creates a directory storing files necessary for the future steps. By default, the directory will be named based on the date when running the pipeline. For example, EA20220328_0 will be created since today is 2022-03-28. If the user runs EA again for the same dataset, the last digit will add up to avoid duplications: EA20220328_1 EAqc This is the second step of the pipeline. It analyzes the covariates against the expression to determine if the expression is needed to be adjusted. EArun After running EAqc, this following EArun step will perform differential expression analysis based on defined groups. It also produces QuickOmics objects for webserver loading. EAreport The last step, EAreport, will generate a user-friendly bookdown report to visualize the EA pipeline results. "],["installation.html", "Chapter 3 Installation", " Chapter 3 Installation Download RNASequest from GitHub and add it to the environment: git clone https://github.com/interactivereport/RNASequest.git cd RNASequest #Install RNASequest conda environment #Please make sure you have conda installed before, and this step may take a while bash install #Activate the conda environment conda activate ExpressionAnalysis #Check the path of current directory and add it to $PATH: CurrentDir=`pwd` PATH=&quot;$CurrentDir:$PATH&quot; export $PATH "],["data-preparation.html", "Chapter 4 Data preparation 4.1 Retrieving data from NCBI GEO 4.2 File hierarchy 4.3 Self-prepared files", " Chapter 4 Data preparation 4.1 Retrieving data from NCBI GEO ExpressionAnalysis requires several input files, which should be organized in specific formats. Here, we present an example of the data processing steps using a public NCBI GEO dataset: SRP199678. The R code recount3.example.R can be run in the terminal under the conda environment created before. conda activate ExpressionAnalysis cd RNASequest/example Rscript recount3.example.R 4.2 File hierarchy After running recount3.example.R, we will have all input files for ExpressionAnalysis with the following hierarchy: SRP199678/ ├── comparison.csv ├── counts.tsv ├── geneAnnotation.csv ├── geneLength.tsv ├── meta.csv └── project.yml 4.3 Self-prepared files For users that have their own dataset to run EA, several files can be prepared from scratch. Here are the detailed instruction of what files are required to run the pipeline. Please use the same file hierarchy as 4.2 after creating them. comparison.csv This file contains comparison groups, which must be defined in the meta.csv. Here is an example of the comparison.csv file: metacol,case,ctrl group,grp2,grp1 group,grp3,grp2 counts.tsv This file stores the raw counts of each sample in a tab-delimited format (tsv). $ head -4 counts.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 7 9 11 &quot;ENSMUSG00000095092.1&quot; 2 1 10 &quot;ENSMUSG00000079192.2&quot; 7 7 1 geneAnnotation.csv This file contains the detailed annotation of each gene shown in the count.tsv table. Here is an example: $ head -4 geneAnnotation.csv &quot;&quot;,&quot;seqnames&quot;,&quot;start&quot;,&quot;end&quot;,&quot;width&quot;,&quot;strand&quot;,&quot;source&quot;,&quot;type&quot;,&quot;bp_length&quot;,&quot;phase&quot;,&quot;UniqueID&quot;,&quot;gene_type&quot;,&quot;Gene.Name&quot;,&quot;level&quot;,&quot;mgi_id&quot;,&quot;havana_gene&quot;,&quot;tag&quot;,&quot;id&quot; &quot;ENSMUSG00000079800.2&quot;,&quot;GL456210.1&quot;,9124,58882,49759,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,1271,NA,&quot;ENSMUSG00000079800.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.3&quot;,&quot;3&quot;,NA,NA,NA,1 &quot;ENSMUSG00000095092.1&quot;,&quot;GL456210.1&quot;,108390,110303,1914,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,366,NA,&quot;ENSMUSG00000095092.1&quot;,&quot;protein_coding&quot;,&quot;AC125149.5&quot;,&quot;3&quot;,NA,NA,NA,2 &quot;ENSMUSG00000079192.2&quot;,&quot;GL456210.1&quot;,123792,124928,1137,&quot;+&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,255,NA,&quot;ENSMUSG00000079192.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.1&quot;,&quot;3&quot;,NA,NA,NA,3 geneLength.tsv This file has the gene length information. It must match the dimension of the count.tsv file. $ head -4 geneLength.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 1271 1271 1271 &quot;ENSMUSG00000095092.1&quot; 366 366 366 &quot;ENSMUSG00000079192.2&quot; 255 255 255 meta.csv This meta.csv file can contain many annotation columns for the dataset. For example, this is a meta file containing group information: $ head -4 meta.tsv &quot;&quot;,&quot;group&quot; &quot;SRR9139048&quot;,&quot;grp1&quot; &quot;SRR9139049&quot;,&quot;grp2&quot; &quot;SRR9139050&quot;,&quot;grp3&quot; project.yml The project.yml file contains a high-level summary of the project, including project name, species, etc. $ cat project.yml project: SRP199678 species: mouse file_source: sra project_home: data_sources_sra project_type: data_sources number_samples: 155 "],["running-ea-pipeline.html", "Chapter 5 Running EA pipeline 5.1 EAinit 5.2 EAqc 5.3 EArun 5.4 EAreport", " Chapter 5 Running EA pipeline First, activate the conda environment if you haven’t done so: conda activate ExpressionAnalysis 5.1 EAinit EAinit Path/to/a/DNAnexus/result/folder #Example: EAinit ~/RNASequest/example/SRP199678 The execution of above command will create a sub-folder (EA[timestamp]) in the specified RNAseq result folder. There will be five files in the result folder: compareInfo.csv: an empty comparison definition file (with header). Please fill in this file before EArun call. config.yml: a config fill specifies the parameters of the EAqc and EArun. Please update covariates_adjust after EAqc. geneAnnotation.csv: a gene annotation file including gene symbol. sampleMeta.csv: a sample meta information file, please feel free to add additional columns whose column names should be considered to be added into covariates_check in config.yml. alignQC.pdf: plots generated from alignment QC metrics. Please pay attention on the std out messages. 5.2 EAqc EAqc Path/to/a/config/file #Example: EAqc ~/RNASequest/example/SRP199678/EA20220328_0/config.yml The execution of the command with the above default config file, expression PC analysis will be done against covariates specified in covariates_check in config.yml file. An excel file will list p-value for all numeric and categorical covariates, and with significant ones will be in plot pdf files. The analysis before covariate adjusting will have prefix covariatePCanalysis_noAdjust. Based on the above results, you can add covariates into covariates_adjust in config.yml file, and run EAqc again. This time additional expression PC analysis will be applied to covariate adjusted expression with files started with covariatePCanalysis_Adjusted. Please pay attention on the std out messages. 5.3 EArun EArun Path/to/a/config/file #Example: EArun ~/RNASequest/example/SRP199678/EA20220328_0/config.yml Please fill the compareInfo.csv before executing the above command The execution of above command will produce R objects for QuickOmics webserver to load. The process will generate the covariate adjusted logTPM for visualization; complete differentially expressed gene analysis and gene network generation. The results (four files) can be uploaded to the QuickOmics webserver. Please pay attention on the std out messages. 5.4 EAreport EAreport Path/to/a/config/file #Example: EAreport ~/RNASequest/example/SRP199678/EA20220328_0/config.yml By running the command above, the pipeline will generate a BookdownReport folder in the same directory as the config file. This folder contains the raw Rmd files, as well as the final bookdown report, which is the BookdownReport/docs/index.html file. If you move the directory, please move everything inside the docs directory, since other files are part of the bookdown report, and the index.html can automatically link everything together. "],["output.html", "Chapter 6 Output 6.1 QuickOmics visualization 6.2 Other output files", " Chapter 6 Output 6.1 QuickOmics visualization The output results can be piped to QuickOmics (http://quickomics.bxgenomics.com) for visualization. Here are the four necessary files required by QuickOmics: SRP199678_estCount.rds SRP199678_network.RData SRP199678.RData SRP199678.csv This example has been uploaded to the QuickOmics site: http://ngs.biogen.com:3838/Quickomics/?testfile=SRP199678 6.2 Other output files Also, the EA pipeline generates the files under the working directory, in this example, EA20220316_0: The pdf files and index.html can be directly visualized by the user. SRP199678/ ├── comparison.csv ├── counts.tsv ├── EA20220328_0 #This directory was generated by the EA pipeline, using the date information ├── BookdownReport/ ├── ... ├── docs/ ├── index.html #Bookdown report gnerated by EAreport └── .... ├── config.yml ├── data/ ├── notAdjusted_Covariate_PC_Results.rds ├── notAdjusted_Covariate_PC_Results.xlsx ├── notAdjusted_PCA_Plots.pdf ├── notAdjusted_Significant_Categorical_Covariates.pdf ├── notAdjusted_Significant_Numeric_Covariates.pdf ├── sequenceQC.pdf ├── sequenceQC.unionTop.TPM.csv ├── session.EAinit #R sessionInfo() outputs for each step ├── session.EAqc ├── session.EAreport ├── session.EArun ├── SRP199678.csv #QuickOmics file 1 ├── SRP199678_estCount.rds #QuickOmics file 2 ├── SRP199678_network.RData #QuickOmics file 3 ├── SRP199678.RData #QuickOmics file 4 ├── geneAnnotation.csv ├── geneLength.tsv ├── meta.csv └── project.yml "],["bookdown-report.html", "Chapter 7 Bookdown report", " Chapter 7 Bookdown report To enable better visualization and immediate delivery of the results, we employed a Bookdown output to present the key tables and figures after running the EA pipeline. Bookdown is a book-like long-form report originated from R Markdown with dynamic graphics and user-friendly layouts. The bookdown document generated by our pipeline, an interactive webpage in HTML format, allows users to explore the results on a web browser without installing any specific software. It contains a high-level summary of the project, such as the data quality, significant covariates, as well as basic plots including PCA, heatmaps, and volcano plots. Further, it can be hosted in GitHub as exemplified here, for broad sharing especially in publication. Here is a screenshot of a bookdown report generated after running the EA pipeline. It contains 5 sections showing multiple exploratory analysis figures: QC, Covariates, PCA, Volcano plot and Heatmaps. "],["online-slide-deck.html", "Chapter 8 Online slide deck", " Chapter 8 Online slide deck Powered by reveal.js, the online slide deck is a R markdown template utilized by RNASequest to generate an interactive slide deck with emphasis on graphical representation of QC and basic analysis plots, which makes the primary analysis presentation-ready to engage biologists to discuss the initial results immediately. Again, it is also GitHub friendly in terms of hosting. Please visite the online slide deck using the following link: https://interactivereport.github.io/RNASequest/ShinyOne/SRP199678/SlideDeck/index.html "],["shinyone.html", "Chapter 9 ShinyOne", " Chapter 9 ShinyOne We also developed ShinyOne, which is a R Shiny App displaying a web-based searchable table that lists all projects processed by RNASequest and loaded into Quickomics, with Quickomics launching link for each project. In the backend of Quickomics, we added the capability to load projects directly from URLs after the data files have been saved at user-specified server locations. Together, ShinyOne and URL loading enable many projects to be powered by one Quickomics instance. Please use the following link to access ShinyOne: http://shinyone.bxgenomics.com "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
